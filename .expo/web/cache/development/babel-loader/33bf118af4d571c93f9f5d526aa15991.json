{"ast":null,"code":"import * as React from 'react';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome5\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport 'react-native-gesture-handler';\nimport colors from \"../theme/colors\";\nimport EmpDataTable from \"../components/EmpDataTable\";\nimport LoginScreen from \"../screens/LoginScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ReportScreen from \"../screens/ReportScreen\";\nimport SettingScreen from \"../screens/SettingsScreen\";\nimport DealerScreen from \"../screens/DealerScreen\";\nimport NewEmpScreen from \"../screens/NewEmpScreen\";\nimport EmployeeScreen from \"../screens/EmployeeScreen\";\nimport TransactionFormScreen from \"../screens/TransactionFormScreen\";\nimport ResetPasswordScreen from \"../screens/ResetPasswordScreen\";\nimport PasswordOtpScreen from \"../screens/PasswordOtpScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar LoginStack = function LoginStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      headerShown: false,\n      tabBarVisibility: false,\n      tabBarVisible: false,\n      tabBarStyle: {\n        display: \"none\"\n      },\n      tabBarButton: function tabBarButton() {\n        return null;\n      }\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"ResetPassword\",\n      component: ResetPasswordScreen\n    }), _jsx(Stack.Screen, {\n      name: \"PasswordOtp\",\n      component: PasswordOtpScreen\n    }), _jsx(Stack.Screen, {\n      name: \"NewEmp\",\n      component: NewEmpScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Report\",\n      component: ReportScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Transactions\",\n      component: TransactionFormScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Employee\",\n      component: EmployeeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"EmpData\",\n      component: EmpDataTable\n    }), _jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingScreen\n    })]\n  });\n};\n\nvar HomeStack = function HomeStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"NewEmp\",\n      component: NewEmpScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Employee\",\n      component: EmployeeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"EmpData\",\n      component: EmpDataTable\n    }), _jsx(Stack.Screen, {\n      name: \"PasswordOtp\",\n      component: PasswordOtpScreen\n    })]\n  });\n};\n\nfunction SettingsStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Settings\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingScreen\n    }), _jsx(Stack.Screen, {\n      name: \"ResetPassword\",\n      component: ResetPasswordScreen\n    }), _jsx(Stack.Screen, {\n      name: \"PasswordOtp\",\n      component: PasswordOtpScreen\n    })]\n  });\n}\n\n;\n\nfunction TransactionStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Report\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Report\",\n      component: ReportScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Transactions\",\n      component: TransactionFormScreen\n    })]\n  });\n}\n\n;\nexport default function RootNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      screenOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: '#a1a1a1'\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"LoginStack\",\n        component: LoginStack,\n        options: {\n          tabBarLabel: false,\n          headerShown: false,\n          tabBarLabel: 'Login',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return _jsx(FontAwesome, {\n              name: \"key\",\n              size: 25,\n              color: \"#444\"\n            });\n          },\n          tabBarActiveBackgroundColor: '#fefefe',\n          tabBarHideOnKeyboard: true,\n          tabBarShowLabel: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"HomeStack\",\n        component: HomeStack,\n        options: {\n          tabBarLabel: false,\n          headerShown: false,\n          tabBarLabel: 'Home',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return _jsx(FontAwesome, {\n              name: \"home\",\n              size: 25,\n              color: \"#444\"\n            });\n          },\n          tabBarActiveBackgroundColor: '#fefefe',\n          tabBarHideOnKeyboard: true,\n          tabBarShowLabel: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"SettingsStack\",\n        component: SettingsStack,\n        options: {\n          headerShown: false,\n          tabBarLabel: 'Settings',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return _jsx(FontAwesome, {\n              name: \"cog\",\n              size: 25,\n              color: \"#444\"\n            });\n          },\n          tabBarActiveBackgroundColor: '#fefefe',\n          tabBarHideOnKeyboard: true,\n          tabBarShowLabel: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/parth/Desktop/hindware-react-native-main/hindware-react-native/src/routes/RootNavigator.js"],"names":["React","FontAwesome","NavigationContainer","createStackNavigator","createBottomTabNavigator","colors","EmpDataTable","LoginScreen","HomeScreen","ReportScreen","SettingScreen","DealerScreen","NewEmpScreen","EmployeeScreen","TransactionFormScreen","ResetPasswordScreen","PasswordOtpScreen","Stack","Tab","LoginStack","headerShown","tabBarVisibility","tabBarVisible","tabBarStyle","display","tabBarButton","HomeStack","SettingsStack","TransactionStack","RootNavigator","activeTintColor","inactiveTintColor","tabBarLabel","tabBarIcon","color","size","tabBarActiveBackgroundColor","tabBarHideOnKeyboard","tabBarShowLabel"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome5';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport 'react-native-gesture-handler';\r\nimport colors from '../theme/colors';\r\n\r\n\r\nimport EmpDataTable from '../components/EmpDataTable';\r\nimport LoginScreen from '../screens/LoginScreen';\r\nimport HomeScreen from '../screens/HomeScreen';\r\nimport ReportScreen from '../screens/ReportScreen';\r\nimport SettingScreen from '../screens/SettingsScreen';\r\nimport DealerScreen from '../screens/DealerScreen';\r\nimport NewEmpScreen from '../screens/NewEmpScreen';\r\nimport EmployeeScreen from '../screens/EmployeeScreen';\r\nimport TransactionFormScreen from '../screens/TransactionFormScreen';\r\nimport ResetPasswordScreen from '../screens/ResetPasswordScreen';\r\nimport PasswordOtpScreen from '../screens/PasswordOtpScreen';\r\n\r\n\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nconst LoginStack = () => {\r\n        return (\r\n                <Stack.Navigator initialRouteName=\"Login\" screenOptions={{ headerShown: false, tabBarVisibility: false, tabBarVisible: false, tabBarStyle: {\r\n                        display: \"none\",\r\n                      },\r\n                      tabBarButton: () => null, }}>\r\n                        <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n                        <Stack.Screen name=\"ResetPassword\" component={ResetPasswordScreen} />\r\n                        <Stack.Screen name=\"PasswordOtp\" component={PasswordOtpScreen} />\r\n                        <Stack.Screen name=\"NewEmp\" component={NewEmpScreen} />\r\n                        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n                        <Stack.Screen name=\"Report\" component={ReportScreen} />\r\n                        <Stack.Screen name=\"Transactions\" component={TransactionFormScreen} />\r\n                        <Stack.Screen name=\"Employee\" component={EmployeeScreen} />\r\n                        <Stack.Screen name=\"EmpData\" component={EmpDataTable} />\r\n                        <Stack.Screen name=\"Settings\" component={SettingScreen} />\r\n                </Stack.Navigator>\r\n        );\r\n}\r\n\r\nconst HomeStack = () => {\r\n        return (\r\n                <Stack.Navigator initialRouteName=\"Home\" screenOptions={{ headerShown: false, }}>\r\n                        <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n                        <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n                        <Stack.Screen name=\"NewEmp\" component={NewEmpScreen} />\r\n                        <Stack.Screen name=\"Employee\" component={EmployeeScreen} />\r\n                        <Stack.Screen name=\"EmpData\" component={EmpDataTable} />\r\n                        <Stack.Screen name=\"PasswordOtp\" component={PasswordOtpScreen} />\r\n                </Stack.Navigator>\r\n        );\r\n};\r\n\r\nfunction SettingsStack() {\r\n        return (\r\n                <Stack.Navigator\r\n                        initialRouteName=\"Settings\"\r\n                        screenOptions={{\r\n                                headerShown: false,\r\n                        }}>\r\n                        <Stack.Screen name=\"Settings\" component={SettingScreen} />\r\n                        <Stack.Screen name=\"ResetPassword\" component={ResetPasswordScreen} />\r\n                        <Stack.Screen name=\"PasswordOtp\" component={PasswordOtpScreen} />\r\n                </Stack.Navigator>\r\n        );\r\n};\r\nfunction TransactionStack() {\r\n        return (\r\n                <Stack.Navigator\r\n                        initialRouteName=\"Report\"\r\n                        screenOptions={{\r\n                                headerShown: false,\r\n                        }}>\r\n                        <Stack.Screen name=\"Report\" component={ReportScreen} />\r\n                        <Stack.Screen name=\"Transactions\" component={TransactionFormScreen} />\r\n                </Stack.Navigator>\r\n        );\r\n};\r\n\r\n\r\n\r\n\r\nexport default function RootNavigator() {\r\n        return (\r\n                <NavigationContainer>\r\n                        <Tab.Navigator\r\n                                screenOptions={{\r\n                                        activeTintColor: 'tomato',\r\n                                        inactiveTintColor: '#a1a1a1',\r\n                                }}>\r\n                                <Tab.Screen name=\"LoginStack\" component={LoginStack}\r\n                                        options={{\r\n                                                tabBarLabel: false, headerShown: false, tabBarLabel: 'Login',\r\n                                                tabBarIcon: ({ color, size }) => (<FontAwesome name=\"key\" size={25} color=\"#444\" />),\r\n                                                tabBarActiveBackgroundColor: '#fefefe',\r\n                                                tabBarHideOnKeyboard: true,\r\n                                                tabBarShowLabel: false,\r\n                                                // tabBarStyle: {\r\n                                                //         display: \"none\",\r\n                                                //       },\r\n                                                // tabBarButton: () => null,\r\n                                        }}\r\n                                        />\r\n                                <Tab.Screen name=\"HomeStack\" component={HomeStack}\r\n                                        options={{\r\n                                                tabBarLabel: false, headerShown: false, tabBarLabel: 'Home',\r\n                                                tabBarIcon: ({ color, size }) => (<FontAwesome name=\"home\" size={25} color=\"#444\" />),\r\n                                                tabBarActiveBackgroundColor: '#fefefe',\r\n                                                tabBarHideOnKeyboard: true,\r\n                                                tabBarShowLabel: false,\r\n                                        }} />\r\n\r\n                                \r\n\r\n                                <Tab.Screen name=\"SettingsStack\" component={SettingsStack} options={{\r\n                                        headerShown: false, tabBarLabel: 'Settings', tabBarIcon: ({ color, size }) => (\r\n                                                <FontAwesome name=\"cog\" size={25} color=\"#444\" />),\r\n                                        tabBarActiveBackgroundColor: '#fefefe', tabBarHideOnKeyboard: true,\r\n                                        tabBarShowLabel: false,\r\n                                }} />\r\n                        </Tab.Navigator>\r\n                </NavigationContainer>\r\n        );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}