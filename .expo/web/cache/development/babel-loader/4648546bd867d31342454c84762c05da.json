{"ast":null,"code":"import * as React from 'react';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome5\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport 'react-native-gesture-handler';\nimport LoginScreen from \"../screens/LoginScreen\";\nimport HomeScreen from \"../screens/HomeScreen\";\nimport ReportScreen from \"../screens/ReportScreen\";\nimport SettingScreen from \"../screens/SettingsScreen\";\nimport AccountScreen from \"../screens/AccountScreen\";\nimport DealerScreen from \"../screens/DealerScreen\";\nimport NewEmpScreen from \"../screens/NewEmpScreen\";\nimport EmployeeScreen from \"../screens/EmployeeScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nvar LoginStack = function LoginStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Login\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Login\",\n      component: LoginScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    })]\n  });\n};\n\nvar HomeStack = function HomeStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"NewEmp\",\n      component: NewEmpScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Employee\",\n      component: EmployeeScreen\n    })]\n  });\n};\n\nfunction SettingsStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Settings\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Settings\",\n      component: SettingScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Account\",\n      component: AccountScreen\n    })]\n  });\n}\n\n;\n\nfunction TransactionStack() {\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Dealer\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"Report\",\n      component: ReportScreen\n    }), _jsx(Stack.Screen, {\n      name: \"Dealer\",\n      component: DealerScreen\n    }), _jsx(Stack.Screen, {\n      name: \"NewEmp\",\n      component: NewEmpScreen\n    })]\n  });\n}\n\n;\nexport default function RootNavigator() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Tab.Navigator, {\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'gray'\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"LoginStack\",\n        component: LoginStack,\n        options: {\n          tabBarLabel: false,\n          headerShown: false,\n          tabBarLabel: 'Login',\n          tabBarHideOnKeyboard: true,\n          tabBarShowLabel: false,\n          tabBarActiveTintColor: '#f3f3f3',\n          tabBarInactiveTintColor: '#4f4f4f'\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"HomeStack\",\n        component: HomeStack,\n        options: {\n          tabBarLabel: false,\n          headerShown: false,\n          tabBarLabel: 'Home',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return _jsx(FontAwesome, {\n              name: \"align-left\",\n              size: 25,\n              color: \"#444\"\n            });\n          },\n          tabBarActiveBackgroundColor: '#f3f3f3',\n          tabBarHideOnKeyboard: true,\n          tabBarShowLabel: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"SettingsStack\",\n        component: SettingsStack,\n        options: {\n          headerShown: false,\n          tabBarLabel: 'Settings',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return _jsx(FontAwesome, {\n              name: \"cog\",\n              size: 25,\n              color: \"#444\"\n            });\n          },\n          tabBarActiveBackgroundColor: '#f3f3f3',\n          tabBarHideOnKeyboard: true,\n          tabBarShowLabel: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Transactions\",\n        component: TransactionStack,\n        options: {\n          headerShown: false,\n          tabBarLabel: 'Transactions',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size;\n            return _jsx(FontAwesome, {\n              name: \"file-invoice-dollar\",\n              size: 25,\n              color: \"#444\"\n            });\n          },\n          tabBarActiveBackgroundColor: '#f3f3f3',\n          tabBarHideOnKeyboard: true,\n          tabBarShowLabel: false\n        }\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","FontAwesome","NavigationContainer","createStackNavigator","createBottomTabNavigator","LoginScreen","HomeScreen","ReportScreen","SettingScreen","AccountScreen","DealerScreen","NewEmpScreen","EmployeeScreen","Stack","Tab","LoginStack","headerShown","HomeStack","SettingsStack","TransactionStack","RootNavigator","activeTintColor","inactiveTintColor","tabBarLabel","tabBarHideOnKeyboard","tabBarShowLabel","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarIcon","color","size","tabBarActiveBackgroundColor"],"sources":["/Users/naveenkumar/Naveen/ReactNative Projects/React Native Final/Hindware/src/routes/RootNavigator.js"],"sourcesContent":["import * as React from 'react';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome5';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport 'react-native-gesture-handler';\n\n\n\nimport LoginScreen from '../screens/LoginScreen';\nimport HomeScreen from '../screens/HomeScreen';\nimport ReportScreen from '../screens/ReportScreen';\nimport SettingScreen from '../screens/SettingsScreen';\nimport AccountScreen from '../screens/AccountScreen';\nimport DealerScreen from '../screens/DealerScreen';\nimport NewEmpScreen from '../screens/NewEmpScreen';\nimport EmployeeScreen from '../screens/EmployeeScreen';\n\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nconst LoginStack = () => {\n        return (\n                <Stack.Navigator initialRouteName=\"Login\" screenOptions={{ headerShown: false }}>\n                        <Stack.Screen name=\"Login\" component={LoginScreen} />\n                        <Stack.Screen name=\"Home\" component={HomeScreen} />\n                </Stack.Navigator>\n        );\n}\n\nconst HomeStack = () => {\n        return (\n                <Stack.Navigator initialRouteName=\"Home\" screenOptions={{ headerShown: false }}>\n                        <Stack.Screen name=\"Home\" component={HomeScreen} />\n                        <Stack.Screen name=\"NewEmp\" component={NewEmpScreen} />\n                        <Stack.Screen name=\"Employee\" component={EmployeeScreen} />\n                </Stack.Navigator>\n        );\n};\n\nfunction SettingsStack() {\n        return (\n                <Stack.Navigator\n                        initialRouteName=\"Settings\"\n                        screenOptions={{\n                                headerShown: false,\n                        }}>\n                        <Stack.Screen name=\"Settings\" component={SettingScreen} />\n                        <Stack.Screen name=\"Account\" component={AccountScreen} />\n                </Stack.Navigator>\n        );\n};\nfunction TransactionStack() {\n        return (\n                <Stack.Navigator\n                        initialRouteName=\"Dealer\"\n                        screenOptions={{\n                                headerShown: false,\n                        }}>\n                        <Stack.Screen name=\"Report\" component={ReportScreen} />\n                        <Stack.Screen name=\"Dealer\" component={DealerScreen} />\n                        <Stack.Screen name=\"NewEmp\" component={NewEmpScreen} />\n                </Stack.Navigator>\n        );\n};\n\n\n\n\nexport default function RootNavigator() {\n        return (\n                <NavigationContainer>\n                        <Tab.Navigator\n                                tabBarOptions={{\n                                        activeTintColor: 'tomato',\n                                        inactiveTintColor: 'gray',\n                                }}>\n                                <Tab.Screen name=\"LoginStack\" component={LoginStack}\n                                        options={{\n                                                tabBarLabel: false, headerShown: false, tabBarLabel: 'Login',\n                                                tabBarHideOnKeyboard: true,\n                                                tabBarShowLabel: false, tabBarActiveTintColor: '#f3f3f3',\n                                                tabBarInactiveTintColor: '#4f4f4f'\n                                        }} />\n                                <Tab.Screen name=\"HomeStack\" component={HomeStack}\n                                        options={{\n                                                tabBarLabel: false, headerShown: false, tabBarLabel: 'Home',\n                                                tabBarIcon: ({ color, size }) => (<FontAwesome name=\"align-left\" size={25} color=\"#444\" />),\n                                                tabBarActiveBackgroundColor: '#f3f3f3',\n                                                tabBarHideOnKeyboard: true,\n                                                tabBarShowLabel: false,\n                                        }} />\n                                <Tab.Screen name=\"SettingsStack\" component={SettingsStack} options={{\n                                        headerShown: false, tabBarLabel: 'Settings', tabBarIcon: ({ color, size }) => (\n                                                <FontAwesome name=\"cog\" size={25} color=\"#444\" />),\n                                        tabBarActiveBackgroundColor: '#f3f3f3', tabBarHideOnKeyboard: true,\n                                        tabBarShowLabel: false,\n                                }} />\n                                <Tab.Screen name=\"Transactions\"\n                                        component={TransactionStack}\n                                        options={{\n                                                headerShown: false, tabBarLabel: 'Transactions', tabBarIcon: ({ color, size }) => (\n                                                        <FontAwesome name=\"file-invoice-dollar\" size={25} color=\"#444\" />),\n                                                tabBarActiveBackgroundColor: '#f3f3f3',\n                                                tabBarHideOnKeyboard: true,\n                                                tabBarShowLabel: false,\n                                        }} />\n                        </Tab.Navigator>\n                </NavigationContainer>\n        );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}