{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { Appbar } from 'react-native-paper';\nimport { Table, TableWrapper, Row, Cell } from 'react-native-table-component';\nimport { colors } from \"../theme/colors\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar EmpDataTable = function (_Component) {\n  _inherits(EmpDataTable, _Component);\n\n  var _super = _createSuper(EmpDataTable);\n\n  function EmpDataTable(props) {\n    var _this;\n\n    _classCallCheck(this, EmpDataTable);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      signedin: '',\n      tableHead: ['ID', 'Name', 'Zone', 'District', 'Sales'],\n      tableData: [['1', '2', '3', '4', '5'], ['a', 'b', 'c', 'd', 'e'], ['1', '2', '3', '4', '5'], ['a', 'b', 'c', 'd', 'e'], ['1', '2', '3', '4', '5']]\n    };\n    return _this;\n  }\n\n  _createClass(EmpDataTable, [{\n    key: \"_alertIndex\",\n    value: function _alertIndex(index) {\n      Alert.alert(\"This is row \" + (index + 1));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AsyncStorage.getItem('loggedUser').then(function (value) {\n        _this2.setState({\n          signedin: value\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var state = this.state;\n\n      var element = function element(data, index) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this3._alertIndex(index);\n          },\n          children: _jsx(View, {\n            style: styles.btn,\n            children: _jsx(Text, {\n              style: styles.btnText,\n              children: \"Record\"\n            })\n          })\n        });\n      };\n\n      return _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: styles.container,\n          children: _jsxs(Table, {\n            borderStyle: {\n              borderColor: 'transparent'\n            },\n            children: [_jsx(Row, {\n              data: state.tableHead,\n              style: styles.head,\n              textStyle: styles.text\n            }), state.tableData.map(function (rowData, index) {\n              return _jsx(TableWrapper, {\n                style: styles.row,\n                children: rowData.map(function (cellData, cellIndex) {\n                  return _jsx(Cell, {\n                    data: cellIndex === 4 ? element(cellData, index) : cellData,\n                    textStyle: styles.text\n                  }, cellIndex);\n                })\n              }, index);\n            })]\n          })\n        }), _jsx(Text, {\n          children: \"click here to see the details of employee\"\n        }), _jsx(Pressable, {\n          style: styles.plusButtonStyle,\n          onPress: function onPress() {\n            return _this3.props.navigation.navigate(\"NewEmp\");\n          },\n          children: _jsx(Text, {\n            style: styles.plusButtonTextStyle,\n            children: \"+\"\n          })\n        })]\n      });\n    }\n  }]);\n\n  return EmpDataTable;\n}(Component);\n\nexport { EmpDataTable as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 16,\n    paddingTop: 30,\n    backgroundColor: '#fefefe'\n  },\n  head: {\n    height: 40,\n    backgroundColor: '#a1a1a1'\n  },\n  text: {\n    margin: 6\n  },\n  row: {\n    flexDirection: 'row',\n    backgroundColor: '#fff1c1'\n  },\n  btn: {\n    width: 58,\n    height: 18,\n    backgroundColor: '#ea4f5a',\n    borderRadius: 2\n  },\n  btnText: {\n    textAlign: 'center',\n    color: '#fefefe'\n  },\n  headbar: {\n    marginTop: hp('6.02%'),\n    height: hp('7.22%'),\n    backgroundColor: colors.paleRed\n  },\n  plusButtonStyle: {\n    height: hp('6.70%'),\n    width: wp('11.94%'),\n    borderRadius: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: colors.red\n  },\n  plusButtonTextStyle: {\n    color: colors.white,\n    fontSize: hp('5%'),\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    alignContent: 'center',\n    textAlign: 'center',\n    textAlignVertical: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/parth/Desktop/hindware-react-native-main/hindware-react-native/src/components/EmpDataTable.js"],"names":["React","Component","Appbar","Table","TableWrapper","Row","Cell","colors","AsyncStorage","widthPercentageToDP","wp","heightPercentageToDP","hp","EmpDataTable","props","state","signedin","tableHead","tableData","index","Alert","alert","getItem","then","value","setState","element","data","_alertIndex","styles","btn","btnText","container","borderColor","head","text","map","rowData","row","cellData","cellIndex","plusButtonStyle","navigation","navigate","plusButtonTextStyle","StyleSheet","create","flex","padding","paddingTop","backgroundColor","height","margin","flexDirection","width","borderRadius","textAlign","color","headbar","marginTop","paleRed","alignItems","justifyContent","red","white","fontSize","alignSelf","alignContent","textAlignVertical"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { StyleSheet, View, Text, TouchableOpacity, Alert, Pressable } from 'react-native';\r\nimport { Appbar } from 'react-native-paper';\r\nimport { Table, TableWrapper, Row, Cell } from 'react-native-table-component';\r\nimport { colors } from '../theme/colors';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {\r\n  widthPercentageToDP as wp,\r\n  heightPercentageToDP as hp\r\n} from 'react-native-responsive-screen';\r\nexport default class EmpDataTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signedin: '',\r\n      tableHead: ['ID', 'Name', 'Zone', 'District', 'Sales'],\r\n      tableData: [\r\n        ['1', '2', '3', '4', '5'],\r\n        ['a', 'b', 'c', 'd', 'e'],\r\n        ['1', '2', '3', '4', '5'],\r\n        ['a', 'b', 'c', 'd', 'e'],\r\n        ['1', '2', '3', '4', '5'],\r\n      ]\r\n    }\r\n  }\r\n\r\n  _alertIndex(index) {\r\n    Alert.alert(`This is row ${index + 1}`);\r\n  }\r\n  componentDidMount() {\r\n    AsyncStorage.getItem('loggedUser').then((value) => {\r\n      this.setState({ signedin: value })\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const state = this.state;\r\n    const element = (data, index) => (\r\n      <TouchableOpacity onPress={() => this._alertIndex(index)}>\r\n        <View style={styles.btn}>\r\n          <Text style={styles.btnText}>Record</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n\r\n\r\n    return (\r\n      <>\r\n        <View style={styles.container}>\r\n          <Table borderStyle={{ borderColor: 'transparent' }}>\r\n            <Row data={state.tableHead} style={styles.head} textStyle={styles.text} />\r\n            {\r\n              state.tableData.map((rowData, index) => (\r\n                <TableWrapper key={index} style={styles.row}>\r\n                  {\r\n                    rowData.map((cellData, cellIndex) => (\r\n                      <Cell key={cellIndex} data={cellIndex === 4 ? element(cellData, index) : cellData} textStyle={styles.text} />\r\n                    ))\r\n                  }\r\n                </TableWrapper>\r\n              ))\r\n            }\r\n          </Table>\r\n        </View>\r\n        <Text>\r\n          click here to see the details of employee\r\n        </Text>\r\n        <Pressable\r\n          style={styles.plusButtonStyle}\r\n          onPress={() => this.props.navigation.navigate(\"NewEmp\")}>\r\n          <Text style={styles.plusButtonTextStyle}>+</Text>\r\n\r\n        </Pressable>\r\n\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, padding: 16, paddingTop: 30, backgroundColor: '#fefefe' },\r\n  head: { height: 40, backgroundColor: '#a1a1a1' },\r\n  text: { margin: 6 },\r\n  row: { flexDirection: 'row', backgroundColor: '#fff1c1' },\r\n  btn: { width: 58, height: 18, backgroundColor: '#ea4f5a', borderRadius: 2 },\r\n  btnText: { textAlign: 'center', color: '#fefefe' },\r\n  headbar: {\r\n    marginTop: hp('6.02%'),\r\n    height: hp('7.22%'),\r\n    backgroundColor: colors.paleRed\r\n  },\r\n  plusButtonStyle: {\r\n    height: hp('6.70%'),\r\n    width: wp('11.94%'),\r\n    borderRadius: 50,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: colors.red,\r\n  },\r\n  plusButtonTextStyle: {\r\n    color: colors.white,\r\n    fontSize: hp('5%'),\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    alignSelf: 'center',\r\n    alignContent: 'center',\r\n    textAlign: 'center',\r\n    textAlignVertical: 'center'\r\n  },\r\n});"]},"metadata":{},"sourceType":"module"}