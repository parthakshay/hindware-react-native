{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, useEffect, forwardRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport PropTypes from 'prop-types';\nimport FeatherIcon from \"@expo/vector-icons/Feather\";\nimport AntDesign from \"@expo/vector-icons/AntDesign\";\nimport Entypo from \"@expo/vector-icons/Entypo\";\nimport EvilIcons from \"@expo/vector-icons/EvilIcons\";\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport FontAwesome5 from \"@expo/vector-icons/FontAwesome5\";\nimport Fontisto from \"@expo/vector-icons/Fontisto\";\nimport Foundation from \"@expo/vector-icons/Foundation\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport MaterialIcons from \"@expo/vector-icons/MaterialIcons\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport Octicons from \"@expo/vector-icons/Octicons\";\nimport Zocial from \"@expo/vector-icons/Zocial\";\nimport SimpleLineIcons from \"@expo/vector-icons/SimpleLineIcons\";\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar TextBox = forwardRef(function (props, ref) {\n  var onBlur = props.onBlur,\n      onChangeText = props.onChangeText,\n      onFocus = props.onFocus,\n      onSubmitEditing = props.onSubmitEditing,\n      alertType = props.alertType,\n      _props$blurOnSubmit = props.blurOnSubmit,\n      blurOnSubmit = _props$blurOnSubmit === void 0 ? false : _props$blurOnSubmit,\n      _props$eyeColor = props.eyeColor,\n      eyeColor = _props$eyeColor === void 0 ? '#2E2E2E' : _props$eyeColor,\n      hint = props.hint,\n      _props$hintColor = props.hintColor,\n      hintColor = _props$hintColor === void 0 ? '#818181' : _props$hintColor,\n      hintStyles = props.hintStyles,\n      _props$iconFamily = props.iconFamily,\n      iconFamily = _props$iconFamily === void 0 ? 'Feather' : _props$iconFamily,\n      _props$iconSuccess = props.iconSuccess,\n      iconSuccess = _props$iconSuccess === void 0 ? 'smile' : _props$iconSuccess,\n      _props$iconSuccessCol = props.iconSuccessColor,\n      iconSuccessColor = _props$iconSuccessCol === void 0 ? '#28a745' : _props$iconSuccessCol,\n      _props$iconWarning = props.iconWarning,\n      iconWarning = _props$iconWarning === void 0 ? 'alert-triangle' : _props$iconWarning,\n      _props$iconWarningCol = props.iconWarningColor,\n      iconWarningColor = _props$iconWarningCol === void 0 ? '#ffc107' : _props$iconWarningCol,\n      _props$iconAlert = props.iconAlert,\n      iconAlert = _props$iconAlert === void 0 ? 'alert-circle' : _props$iconAlert,\n      _props$iconAlertColor = props.iconAlertColor,\n      iconAlertColor = _props$iconAlertColor === void 0 ? '#dc3545' : _props$iconAlertColor,\n      inputStyle = props.inputStyle,\n      placeholder = props.placeholder,\n      _props$placeholderTex = props.placeholderTextColor,\n      placeholderTextColor = _props$placeholderTex === void 0 ? \"#C5C5C5\" : _props$placeholderTex,\n      _props$rtl = props.rtl,\n      rtl = _props$rtl === void 0 ? false : _props$rtl,\n      _props$returnKeyType = props.returnKeyType,\n      returnKeyType = _props$returnKeyType === void 0 ? 'next' : _props$returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      containerStyles = props.containerStyles,\n      value = props.value;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSecure = _useState2[0],\n      setIsSecure = _useState2[1];\n\n  var _useState3 = useState(props.value),\n      _useState4 = _slicedToArray(_useState3, 2),\n      textValue = _useState4[0],\n      setTextValue = _useState4[1];\n\n  useEffect(function () {});\n\n  var onChange = function onChange(text) {\n    setTextValue(text);\n    onChangeText(text);\n  };\n\n  var renderAlertIcon = function renderAlertIcon() {\n    var Icon = FeatherIcon;\n\n    switch (iconFamily) {\n      case 'Feather':\n        Icon = FeatherIcon;\n        break;\n\n      case 'AntDesign':\n        Icon = AntDesign;\n        break;\n\n      case 'Entypo':\n        Icon = Entypo;\n        break;\n\n      case 'EvilIcons':\n        Icon = EvilIcons;\n        break;\n\n      case 'FontAwesome':\n        Icon = FontAwesome;\n        break;\n\n      case 'FontAwesome':\n        Icon = FontAwesome5;\n        break;\n\n      case 'Fontisto':\n        Icon = Fontisto;\n        break;\n\n      case 'Foundation':\n        Icon = Foundation;\n        break;\n\n      case 'Ionicons':\n        Icon = Ionicons;\n        break;\n\n      case 'MaterialIcons':\n        Icon = MaterialIcons;\n        break;\n\n      case 'MaterialCommunityIcons':\n        Icon = MaterialCommunityIcons;\n        break;\n\n      case 'Octicons':\n        Icon = Octicons;\n        break;\n\n      case 'Zocial':\n        Icon = Zocial;\n        break;\n\n      case 'SimpleLineIcons':\n        Icon = SimpleLineIcons;\n        break;\n\n      default:\n        Icon = FeatherIcon;\n        break;\n    }\n\n    if (alertType) {\n      switch (alertType) {\n        case 'success':\n          return _jsx(Icon, {\n            name: iconSuccess,\n            size: 16,\n            color: iconSuccessColor\n          });\n\n        case 'warning':\n          return _jsx(Icon, {\n            name: iconWarning,\n            size: 16,\n            color: iconWarningColor\n          });\n\n        case 'error':\n          return _jsx(Icon, {\n            name: iconAlert,\n            size: 16,\n            color: iconAlertColor\n          });\n\n        default:\n          return null;\n      }\n    }\n  };\n\n  var onEyePress = function onEyePress() {\n    setIsSecure(!isSecure);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, _objectSpread(_objectSpread({\n      style: [containerStyles, rtl ? styles.justifyInRow : styles.justifyLeftInRow]\n    }, props), {}, {\n      children: [_jsx(TextInput, {\n        ref: ref,\n        style: [inputStyle, {\n          flex: 1\n        }],\n        onChangeText: function onChangeText(text) {\n          return onChange(text);\n        },\n        blurOnSubmit: blurOnSubmit,\n        returnKeyType: returnKeyType,\n        placeholder: placeholder,\n        placeholderTextColor: placeholderTextColor,\n        secureTextEntry: secureTextEntry ? isSecure : false,\n        value: textValue,\n        onSubmitEditing: onSubmitEditing,\n        onBlur: onBlur,\n        onFocus: onFocus\n      }), _jsxs(View, {\n        style: [rtl ? styles.justifyLeftInRow : styles.justifyRightInRow],\n        children: [secureTextEntry && _jsx(View, {\n          children: _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return onEyePress();\n            },\n            style: [styles.paddingH5],\n            children: _jsx(FeatherIcon, {\n              name: isSecure ? 'eye' : 'eye-off',\n              size: 16,\n              color: eyeColor\n            })\n          })\n        }), secureTextEntry && alertType && _jsx(View, {\n          style: [{\n            width: 1,\n            height: 20,\n            backgroundColor: '#2E2E2E'\n          }]\n        }), _jsx(View, {\n          style: [styles.paddingH5],\n          children: renderAlertIcon()\n        })]\n      })]\n    })), hint && _jsx(Text, {\n      style: [styles.font12, hintStyles, {\n        color: hintColor\n      }],\n      children: hint\n    })]\n  });\n});\nTextBox.propTypes = {\n  onBlur: PropTypes.func,\n  onChangeText: PropTypes.func.isRequired,\n  onFocus: PropTypes.func,\n  onSubmitEditing: PropTypes.func,\n  alertType: PropTypes.string,\n  blurOnSubmit: PropTypes.bool,\n  eyeColor: PropTypes.string,\n  containerStyles: PropTypes.object,\n  hint: PropTypes.string,\n  hintColor: PropTypes.string,\n  hintStyles: PropTypes.object,\n  iconFamily: PropTypes.string,\n  iconSuccess: PropTypes.string,\n  iconSuccessColor: PropTypes.string,\n  iconWarning: PropTypes.string,\n  iconWarningColor: PropTypes.string,\n  iconAlert: PropTypes.string,\n  iconAlertColor: PropTypes.string,\n  inputStyle: PropTypes.object,\n  placeholder: PropTypes.string,\n  placeholderTextColor: PropTypes.string,\n  returnKeyType: PropTypes.string,\n  rtl: PropTypes.bool,\n  secureTextEntry: PropTypes.bool\n};\nexport default TextBox;","map":{"version":3,"sources":["C:/Users/parth/Desktop/hindware-react-native-main/hindware-react-native/node_modules/react-native-password-eye/src/TextBox.js"],"names":["React","useState","useEffect","forwardRef","PropTypes","FeatherIcon","AntDesign","Entypo","EvilIcons","FontAwesome","FontAwesome5","Fontisto","Foundation","Ionicons","MaterialIcons","MaterialCommunityIcons","Octicons","Zocial","SimpleLineIcons","styles","TextBox","props","ref","onBlur","onChangeText","onFocus","onSubmitEditing","alertType","blurOnSubmit","eyeColor","hint","hintColor","hintStyles","iconFamily","iconSuccess","iconSuccessColor","iconWarning","iconWarningColor","iconAlert","iconAlertColor","inputStyle","placeholder","placeholderTextColor","rtl","returnKeyType","secureTextEntry","containerStyles","value","isSecure","setIsSecure","textValue","setTextValue","onChange","text","renderAlertIcon","Icon","onEyePress","justifyInRow","justifyLeftInRow","flex","justifyRightInRow","paddingH5","width","height","backgroundColor","font12","color","propTypes","func","isRequired","string","bool","object"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef } from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    Dimensions,\n    TextInput,\n} from 'react-native';\n\nimport PropTypes from 'prop-types'; \nimport FeatherIcon from 'react-native-vector-icons/Feather';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport EvilIcons from 'react-native-vector-icons/EvilIcons';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport Fontisto from 'react-native-vector-icons/Fontisto';\nimport Foundation from 'react-native-vector-icons/Foundation';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport Zocial from 'react-native-vector-icons/Zocial';\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\n\nimport styles from './styles'\n\nconst TextBox = forwardRef((props, ref) => {\n    const {\n            onBlur,\n            onChangeText, \n            onFocus,\n            onSubmitEditing,\n            alertType, \n            blurOnSubmit=false, \n            eyeColor='#2E2E2E',\n            hint, \n            hintColor='#818181',\n            hintStyles,\n            iconFamily='Feather',\n            iconSuccess='smile',\n            iconSuccessColor='#28a745',\n            iconWarning='alert-triangle',\n            iconWarningColor='#ffc107',\n            iconAlert='alert-circle',\n            iconAlertColor='#dc3545',\n            inputStyle, \n            placeholder, \n            placeholderTextColor=\"#C5C5C5\", \n            rtl=false,\n            returnKeyType='next',\n            secureTextEntry=false, \n            containerStyles,\n            value\n        } = props;\n\n    const [isSecure, setIsSecure] = useState(true);\n\n    const [textValue, setTextValue] = useState(props.value);\n    \n    useEffect(() => {\n\n    });\n\n    const onChange = (text) => {\n        setTextValue(text);\n        onChangeText(text);\n    }\n\n    /*\n        AntDesign by AntFinance (297 icons)\n        Entypo by Daniel Bruce (411 icons)\n        EvilIcons by Alexander Madyankin & Roman Shamin (v1.10.1, 70 icons)\n        Feather by Cole Bemis & Contributors (v4.28.0, 285 icons)\n        FontAwesome by Dave Gandy (v4.7.0, 675 icons)\n        FontAwesome 5 by Fonticons, Inc. (v5.13.0, 1588 (free) 7842 (pro) icons)\n        Fontisto by Kenan Gündoğan (v3.0.4, 615 icons)\n        Foundation by ZURB, Inc. (v3.0, 283 icons)\n        Ionicons by Iconic Framework (v5.0.1, 1227 icons)\n        MaterialIcons by Google, Inc. (v4.0.0, 1547 icons)\n        MaterialCommunityIcons by MaterialDesignIcons.com (v5.3.45, 5346 icons)\n        Octicons by Github, Inc. (v8.4.1, 184 icons)\n        Zocial by Sam Collins (v1.0, 100 icons)\n        SimpleLineIcons by Sabbir & Contributors (v2.4.1, 189 icons)\n    */\n    const renderAlertIcon = () => {\n        let Icon = FeatherIcon;\n\n        switch(iconFamily){\n            case 'Feather': \n                Icon = FeatherIcon;\n                break;\n            case 'AntDesign': \n                Icon = AntDesign;\n                break;\n            case 'Entypo': \n                Icon = Entypo;\n                break;\n            case 'EvilIcons': \n                Icon = EvilIcons;\n                break;\n            case 'FontAwesome': \n                Icon = FontAwesome;\n                break;\n            case 'FontAwesome': \n                Icon = FontAwesome5;\n                break;\n            case 'Fontisto': \n                Icon = Fontisto;\n                break;\n            case 'Foundation': \n                Icon = Foundation;\n                break;\n            case 'Ionicons': \n                Icon = Ionicons;\n                break;\n            case 'MaterialIcons': \n                Icon = MaterialIcons;\n                break;\n            case 'MaterialCommunityIcons': \n                Icon = MaterialCommunityIcons;\n                break;\n            case 'Octicons': \n                Icon = Octicons;\n                break;\n            case 'Zocial': \n                Icon = Zocial;\n                break;\n            case 'SimpleLineIcons': \n                Icon = SimpleLineIcons;\n                break;\n\n            default:\n                Icon = FeatherIcon;\n                break;\n        }\n\n        if (alertType) {\n            switch(alertType) {\n                case 'success':\n                    return (<Icon name={iconSuccess} size={16} color={iconSuccessColor} />);\n\n                case 'warning':\n                    return (<Icon name={iconWarning} size={16} color={iconWarningColor} />);\n\n                case 'error':\n                    return (<Icon name={iconAlert} size={16} color={iconAlertColor} />);\n\n                default: \n                    return null;\n            }\n        }\n    }\n\n    const onEyePress = () => {\n        setIsSecure(!isSecure)\n    }\n\n    return (\n        <>\n            <View style={[containerStyles, rtl ? styles.justifyInRow : styles.justifyLeftInRow]} {...props}>\n                <TextInput \n                    ref={ref}\n                    style={[inputStyle, {flex: 1}]}\n                    onChangeText={(text) => onChange(text)}\n                    blurOnSubmit={ blurOnSubmit }\n                    returnKeyType={ returnKeyType }\n                    placeholder={placeholder}\n                    placeholderTextColor={placeholderTextColor}\n                    secureTextEntry={secureTextEntry ? isSecure : false}\n                    value={textValue}\n                    onSubmitEditing={onSubmitEditing}\n                    onBlur={onBlur}\n                    onFocus={onFocus}\n                     />\n                    \n                <View style={[rtl ? styles.justifyLeftInRow: styles.justifyRightInRow]}>\n                    {\n                        secureTextEntry &&\n                            <View>\n                                <TouchableOpacity onPress={() => onEyePress()} style={[styles.paddingH5]}>\n                                    <FeatherIcon name={isSecure ? 'eye' : 'eye-off'} size={16} color={eyeColor} />\n                                </TouchableOpacity>\n                            </View>\n                    }\n\n                    {\n                        secureTextEntry && alertType &&\n                            <View style={[{width: 1, height: 20, backgroundColor: '#2E2E2E',}]} />\n                    }\n                    \n                    <View style={[styles.paddingH5]} >\n                        {\n                            renderAlertIcon()\n                        }\n                    </View>\n                </View>\n            </View>\n            {\n                hint &&\n                    <Text style={[styles.font12, hintStyles, {color: hintColor}]}>{hint}</Text>\n            }\n            \n        </>\n    );\n});\n\nTextBox.propTypes = {\n    onBlur: PropTypes.func,\n    onChangeText: PropTypes.func.isRequired,\n    onFocus: PropTypes.func,\n    onSubmitEditing: PropTypes.func,\n    alertType: PropTypes.string,\n    blurOnSubmit: PropTypes.bool,\n    eyeColor: PropTypes.string,\n    containerStyles: PropTypes.object,\n    hint: PropTypes.string,\n    hintColor: PropTypes.string,\n    hintStyles: PropTypes.object,\n    iconFamily: PropTypes.string,\n    iconSuccess: PropTypes.string,\n    iconSuccessColor: PropTypes.string,\n    iconWarning: PropTypes.string,\n    iconWarningColor: PropTypes.string,\n    iconAlert: PropTypes.string,\n    iconAlertColor: PropTypes.string,\n    inputStyle: PropTypes.object,\n    placeholder: PropTypes.string,\n    placeholderTextColor: PropTypes.string,\n    returnKeyType: PropTypes.string,\n    rtl: PropTypes.bool,\n    secureTextEntry: PropTypes.bool,\n}\n\nexport default TextBox;\n"]},"metadata":{},"sourceType":"module"}